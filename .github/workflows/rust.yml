name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Build
        run: cargo build --lib --verbose

      - name: Run basic tests
        run: cargo test --verbose

      - name: Run a basic example
        run: cargo run --example new_struct

  clippy-fmt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Run clippy
        run: cargo clippy --verbose --all-targets --all-features -- -D warnings --no-deps

      - name: Run fmt
        run: cargo fmt --verbose --all -- --check

  coverage:
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate code coverage
        run: |
          cargo tarpaulin --all-targets --all-features --lib --timeout 180 --out xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  x86_64-unknown-none:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-none
          profile: minimal
          override: true

      - name: Build
        run: cargo build --lib --verbose --target x86_64-unknown-none
